/*
 * This file is generated by jOOQ.
*/
package geodata.db.tables.daos;


import geodata.db.tables.City;
import geodata.db.tables.records.CityRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityDao extends DAOImpl<CityRecord, geodata.db.tables.pojos.City, Long> {

    /**
     * Create a new CityDao without any configuration
     */
    public CityDao() {
        super(City.CITY, geodata.db.tables.pojos.City.class);
    }

    /**
     * Create a new CityDao with an attached configuration
     */
    public CityDao(Configuration configuration) {
        super(City.CITY, geodata.db.tables.pojos.City.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(geodata.db.tables.pojos.City object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<geodata.db.tables.pojos.City> fetchById(Long... values) {
        return fetch(City.CITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public geodata.db.tables.pojos.City fetchOneById(Long value) {
        return fetchOne(City.CITY.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<geodata.db.tables.pojos.City> fetchByName(String... values) {
        return fetch(City.CITY.NAME, values);
    }

    /**
     * Fetch records that have <code>population IN (values)</code>
     */
    public List<geodata.db.tables.pojos.City> fetchByPopulation(Integer... values) {
        return fetch(City.CITY.POPULATION, values);
    }
}
